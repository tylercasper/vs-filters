{
    "name": "vs-filters",
    "displayName": "VS Filters",
    "description": "Filters files into virtual folders using Visual Studio '.filters' files.",
    "version": "0.0.3",
    "publisher": "tyler-casper",
    "license": "GPL-3.0-or-later",
    "repository": {
        "type": "git",
        "url": "https://github.com/tylercasper/vs-filters.git"
    },
    "engines": {
      "vscode": "^1.90.0"
    },
    "icon": "images/icon.png",
    "categories": [
      "Other"
    ],
    "activationEvents": [
      "workspaceContains:**/*.vcxproj.filters",
      "onView:vsFilters"
    ],
    "main": "./dist/extension.js",
    "contributes": {
      "views": {
        "explorer": [
          {
            "id": "vsFilters",
            "name": "VS Filters",
            "when": "workspaceFolderCount != 0"
          }
        ]
      },
      "commands": [
        {
          "command": "vsFilters.refresh",
          "title": "Refresh VS Filters",
          "icon": "$(refresh)"
        },
        {
          "command": "vsFilters.createFilter",
          "title": "Create Filter",
          "icon": "$(new-folder)"
        },
        {
          "command": "vsFilters.deleteFilter",
          "title": "Delete Filter",
          "icon": "$(trash)"
        },
        {
          "command": "vsFilters.openToSide",
          "title": "Open to the Side"
        },
        {
          "command": "vsFilters.revealInExplorer",
          "title": "Reveal in File Explorer"
        },
        {
          "command": "vsFilters.copyPath",
          "title": "Copy Path"
        },
        {
          "command": "vsFilters.copyRelativePath",
          "title": "Copy Relative Path"
        },
        {
          "command": "vsFilters.deleteFile",
          "title": "Delete"
        },
        {
          "command": "vsFilters.renameFile",
          "title": "Rename..."
        },
        {
          "command": "vsFilters.openWith",
          "title": "Open With..."
        },
        {
          "command": "vsFilters.openInTerminal",
          "title": "Open in Integrated Terminal"
        },
        {
          "command": "vsFilters.cut",
          "title": "Cut"
        },
        {
          "command": "vsFilters.copy",
          "title": "Copy"
        },
        {
          "command": "vsFilters.paste",
          "title": "Paste"
        },
        {
          "command": "vsFilters.focus",
          "title": "Focus VS Filters Tree"
        }
      ],
              "menus": {
          "view/title": [
            {
              "command": "vsFilters.refresh",
              "when": "view == vsFilters",
              "group": "navigation"
            }
          ],
          "view/item/context": [
            {
              "command": "vsFilters.createFilter",
              "when": "view == vsFilters && (viewItem == folder || viewItem == workspaceRoot)",
              "group": "navigation"
            },
            {
              "command": "vsFilters.deleteFilter",
              "when": "view == vsFilters && viewItem == folder",
              "group": "navigation"
            },
            {
              "command": "vsFilters.paste",
              "when": "view == vsFilters && (viewItem == folder || viewItem == workspaceRoot)",
              "group": "5_cutcopypaste",
              "enablement": "vsFilters.canPaste"
            },
            {
              "command": "vsFilters.openToSide",
              "when": "view == vsFilters && viewItem == file",
              "group": "1_open"
            },
            {
              "command": "vsFilters.openWith",
              "when": "view == vsFilters && viewItem == file",
              "group": "1_open"
            },
            {
              "command": "vsFilters.revealInExplorer",
              "when": "view == vsFilters && viewItem == file",
              "group": "1_open"
            },
            {
              "command": "vsFilters.openInTerminal",
              "when": "view == vsFilters && viewItem == file",
              "group": "1_open"
            },
            {
              "command": "workbench.files.action.showActiveFileInExplorer",
              "when": "view == vsFilters && viewItem == file",
              "group": "1_open"
            },
            {
              "command": "workbench.action.files.share",
              "when": "view == vsFilters && viewItem == file",
              "group": "2_share"
            },
            {
              "command": "workbench.files.action.selectForCompare",
              "when": "view == vsFilters && viewItem == file",
              "group": "3_compare"
            },
            {
              "command": "workbench.files.action.compareFileWith",
              "when": "view == vsFilters && viewItem == file",
              "group": "3_compare"
            },
            {
              "command": "timeline.focus",
              "when": "view == vsFilters && viewItem == file",
              "group": "4_search"
            },
            {
              "command": "vsFilters.cut",
              "when": "view == vsFilters && viewItem == file",
              "group": "5_cutcopypaste",
              "enablement": "vsFilters.canCutFile"
            },
            {
              "command": "vsFilters.copy",
              "when": "view == vsFilters && viewItem == file",
              "group": "5_cutcopypaste",
              "enablement": "vsFilters.canCopyFile"
            },
            {
              "command": "vsFilters.paste",
              "when": "view == vsFilters && viewItem == file",
              "group": "5_cutcopypaste",
              "enablement": "vsFilters.canPaste"
            },
            {
              "command": "vsFilters.copyPath",
              "when": "view == vsFilters && viewItem == file",
              "group": "6_copypath"
            },
            {
              "command": "vsFilters.copyRelativePath",
              "when": "view == vsFilters && viewItem == file",
              "group": "6_copypath"
            },
            {
              "command": "vsFilters.renameFile",
              "when": "view == vsFilters && viewItem == file",
              "group": "7_modification",
              "enablement": "vsFilters.canRenameFile"
            },
            {
              "command": "vsFilters.deleteFile",
              "when": "view == vsFilters && viewItem == file",
              "group": "7_modification",
              "enablement": "vsFilters.canDeleteFile"
            }
          ]
        },
        "keybindings": [
          {
            "command": "vsFilters.copy",
            "key": "ctrl+c",
            "mac": "cmd+c",
            "when": "focusedView == vsFilters && listFocus && vsFilters.canCopyFile"
          },
          {
            "command": "vsFilters.cut", 
            "key": "ctrl+x",
            "mac": "cmd+x",
            "when": "focusedView == vsFilters && listFocus && vsFilters.canCutFile"
          },
          {
            "command": "vsFilters.paste",
            "key": "ctrl+v", 
            "mac": "cmd+v",
            "when": "focusedView == vsFilters && listFocus && vsFilters.canPaste"
          },
          {
            "command": "vsFilters.deleteFile",
            "key": "delete",
            "when": "focusedView == vsFilters && listFocus && vsFilters.canDeleteFile"
          },
          {
            "command": "vsFilters.renameFile",
            "key": "f2",
            "when": "focusedView == vsFilters && listFocus && vsFilters.canRenameFile"
          }
        ],
        "configuration": {
          "title": "VS Filters",
          "properties": {
            "vsFilters.excludePatterns": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "node_modules/**",
                "bin/**",
                "obj/**", 
                "build/**",
                "out/**",
                "tmp/**",
                ".vs/**",
                ".git/**",
                "dist/**"
              ],
              "description": "Glob patterns for files and directories to exclude from the VS Filters view."
            },
            "vsFilters.maxFiles": {
              "type": "number",
              "default": 25000,
              "minimum": 100,
              "maximum": 500000,
              "description": "Maximum number of files to scan when searching for unfiltered files. Higher values may impact performance on very large projects."
            }
          }
        }
    },
    "scripts": {
      "vscode:prepublish": "npm run compile",
      "compile": "tsc -p ./"
    },
    "devDependencies": {
      "@types/node": "^20.12.0",
      "@types/vscode": "^1.90.0",
      "typescript": "^5.5.0"
    },
    "dependencies": {
      "fast-xml-parser": "^4.3.5"
    }
  }
  